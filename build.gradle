plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
//    id 'org.springframework.experimental.aot' version '0.11.0'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.shafiq.checker.CheckerApplication'
        )
    }
}
group = 'com.shafiq'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://repo.spring.io/release' }
    mavenCentral()
    maven { url "https://mvn.mchv.eu/repository/mchv/" }

}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    compileOnly 'org.projectlombok:lombok'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'io.projectreactor:reactor-test'
    implementation platform('it.tdlight:tdlight-java-bom:2.7.10.8')

    // do not specify the versions on the dependencies below!
    implementation 'it.tdlight:tdlight-java'
    implementation 'it.tdlight:tdlight-natives-linux-amd64'
    implementation 'it.tdlight:tdlight-natives-linux-aarch64'
    implementation 'it.tdlight:tdlight-natives-linux-x86'
    implementation 'it.tdlight:tdlight-natives-linux-armv6'
    implementation 'it.tdlight:tdlight-natives-linux-armv7'
    implementation 'it.tdlight:tdlight-natives-linux-ppc64le'
    implementation 'it.tdlight:tdlight-natives-osx-amd64'
    implementation 'it.tdlight:tdlight-natives-windows-amd64'
}

test {
    useJUnitPlatform()
}

bootBuildImage {
    builder = 'paketobuildpacks/builder:tiny'
    environment = ['BP_NATIVE_IMAGE': 'true']
}
